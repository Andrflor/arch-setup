"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
var requestHeaders_1 = require("../data/requestHeaders");
exports.completionProvider = {
    provideCompletionItems: function (document, position) {
        var text = document.getText(vscode_languageserver_protocol_1.Range.create(vscode_languageserver_protocol_1.Position.create(position.line, 0), vscode_languageserver_protocol_1.Position.create(position.line, position.character)));
        if (/^[ \t]*[^ \t]*$/.test(text)) {
            return Object.keys(requestHeaders_1.requestHeaders).map(function (name) { return ({
                label: name,
                kind: vscode_languageserver_protocol_1.CompletionItemKind.Method,
                insertText: name + ": ",
                documentation: {
                    kind: vscode_languageserver_protocol_1.MarkupKind.Markdown,
                    value: requestHeaders_1.requestHeaders[name].document.join('\n')
                }
            }); });
        }
        else if (/^[ \t]*[^ \t]+[ \t]\w*$/.test(text)) {
            var m = text.match(/^[ \t]*([^ \t]+?):?[ \t]\w*$/);
            if (m && requestHeaders_1.requestHeaders[m[1]]) {
                return requestHeaders_1.requestHeaders[m[1].trim()].values.map(function (v) { return ({
                    label: v,
                    kind: vscode_languageserver_protocol_1.CompletionItemKind.Value,
                    insertText: v
                }); });
            }
        }
        return [];
    }
};
//# sourceMappingURL=completion.js.map